{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMnGBYPe9mxfK0fUpaqaoDM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"DmLYN18Qzqn6"},"outputs":[],"source":["\n","import numpy as np #Mucho muy importante\n","import statistics\n"]},{"cell_type":"code","source":["# sacado del treften\n","#for k in range 1 to m-1\n","#    for j in range k+1 to m\n","#    l[j][k] = u[j][k]/u[k][k]\n","#    u[j]k:m = u[j],k:m - ljk uk,k:m\n","#Ejericio 2\n","def descomposicionLU(A):\n","  n = np.shape(A)[0]\n","  l = np.eye(n)\n","  u = A.copy()\n","  \n","  for j in range(n):\n","    if(u[j,j]!=0):\n","      for i in range(j+1,n):\n","        l[i,j] = u[i,j]/u[j,j]\n","        u[i,:]=u[i,:]-l[i,j]*u[j,:]    \n","    \n","    elif(A[j,j]==0 and np.any(A[(j+1):,j]!=0)):\n","      print('Queda un pivote nulo')\n","      return None\n","  return l,u\n"],"metadata":{"id":"pANhCNHB0HNg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio 3\n","def solverTS(U,b):\n","  n = U.shape[0]\n","  x = np.zeros(n)\n","  x[n-1] = b[n-1]/U[n-1][n-1]\n","  for i  in range(n-2,-1,-1):\n","    res = 0\n","    for j in range (i+1,n):\n","      res = res + U[i][j]*x[j]\n","    x[i] = (b[i]-res)/U[i][i]\n","  return x \n","def solverTI(l,b):\n","  n  = l.shape[0]\n","  x = np.zeros(n)\n","  x[0] = b[0]/l[0][0]\n","  for i in range (1,n):\n","    res = 0\n","    for j in range(0,i):\n","      res = res + l[i][j]*x[j]\n","    x[i] = (b[i]-res)/l[i][i]\n","  return x\n","#--Deduccion--#\n","#AX = b \n","#LUX = b \n","#UX = b \n","#Ly  = x\n","\n","def solverSistemaPorLU(m,b):\n","  #m matriz b resultado de mx = b\n","  aux = descomposicionLU(m)\n","  L = aux[0]\n","  U = aux[1]\n","  y = solverTI(L,b)\n","  return solverTS(U,y)\n"],"metadata":{"id":"qahkI4Bj0RJX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Testing Solver\n","A = np.array([[1,3,5],[4,15,16],[-3,-7,53]])\n","b = np.array([22,82,10])\n","aux = descomposicionLU(A)\n","print('Matriz L')\n","print(aux[0]) #L\n","print('Matriz U')\n","print(aux[1]) #U\n","#Nuestra Solucion Obtenida\n","mio = solverSistemaPorLU(A,b)\n","#Soluciones obtenidas usando linalg\n","r1 = np.linalg.solve(aux[0],b)\n","r2 = np.linalg.solve(aux[1],r1)\n","print('X obtenido' , mio)\n","print('X linalg.solve' , r2)\n","mioNorm = np.linalg.norm(mio,2)\n","r2Norm = np.linalg.norm(r2,2)\n","print(\"cociente de las normas\",mioNorm/r2Norm)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A2PIfJg10iH_","executionInfo":{"status":"ok","timestamp":1654277822429,"user_tz":180,"elapsed":24,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"f0760428-e2c0-4391-b7b7-53a3cbad460d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Matriz L\n","[[ 1.          0.          0.        ]\n"," [ 4.          1.          0.        ]\n"," [-3.          0.66666667  1.        ]]\n","Matriz U\n","[[ 1  3  5]\n"," [ 0  3 -4]\n"," [ 0  0 70]]\n","X obtenido [17.71428571 -0.47619048  1.14285714]\n","X linalg.solve [17.71428571 -0.47619048  1.14285714]\n","cociente de las normas 1.0\n"]}]},{"cell_type":"code","source":["#Testing LU\n","def UnTestLU():\n","  m = np.random.rand(100,100)\n","  b = np.random.rand(100)\n","  aux = descomposicionLU(m)\n","  r1 = np.linalg.solve(aux[0],b)\n","  r2 = np.linalg.solve(aux[1],r1)\n","  xObtenido = solverSistemaPorLU(m,b)\n","  return (np.all(np.isclose(xObtenido , r2)))\n","\n","#Testing LU\n","def testingLU(n):\n","  flag = 0\n","  for i in range (n):\n","    if UnTestLU():\n","      flag += 1\n","  return flag == n\n","# Testiamos Hasta 100 matrices de 100X100 retornó True \n","#por lo que el X calculado por nuestro Solver y el de linalg son cercanos\n","testingLU(100) \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aBV21LD_1Yad","executionInfo":{"status":"ok","timestamp":1654277830512,"user_tz":180,"elapsed":8100,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"445e5589-340c-44b6-8a77-8401fafb7025"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["#Ejercicio 4\n","\n","def errorRelativoLU():\n","  m = np.random.rand(10,10)\n","  b = np.random.rand(10)\n","  xObtenido = solverSistemaPorLU(m,b)\n","  e = m.dot(xObtenido) - b\n","  return np.linalg.norm(e, 1)\n","def promedioErrorLU():\n","  res = np.zeros(5000)\n","  for i in range(5000):\n","    res[i] = errorRelativoLU()\n","  return statistics.mean(res)\n","print(promedioErrorLU())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1wB2kl_O0uxG","executionInfo":{"status":"ok","timestamp":1654277831764,"user_tz":180,"elapsed":1257,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"c3dabe33-355f-4fcb-9f68-2140c2f8fffc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.5584050022665608e-13\n"]}]},{"cell_type":"code","source":["#Ejercicio 5\n","# auxiliares LDLT \n","# para vos naza\n","def sumaPepe(L,D,i,j):\n","  res = 0\n","  for k in range (j):\n","    res += L[i][k]*L[j][k]*D[k][k]\n","  return res\n","def choleskyLDL(A):\n","  n = A.shape[0]\n","  L = np.eye(n)\n","  D = np.eye(n)\n","  D[0][0]=A[0][0]\n","  for i in range(n):\n","    for j in range(i):\n","      L[i][j] = (A[i][j] - sumaPepe(L,D,i,j))/D[j][j]\n","      D[i][i] = A[i][i] - sumaPepe(L,D,i,i)\n","  return L , D , np.transpose(L)"],"metadata":{"id":"2BGP7RIN2xGT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Testing Cholesky\n","def UnTestCholesky():\n","  A = np.random.rand(100,100)\n","  A = A@ A.T\n","  L, D, U = choleskyLDL(A)\n","  return (np.all(np.isclose(L @ D @ U , A)))\n","\n","#Testing Cholesky\n","def cholesting(n):\n","  flag = 0\n","  for i in range (n):\n","    if UnTestCholesky():\n","      flag += 1\n","  return flag == n\n","# Testiamos Hasta 100 matrices de 100X100, retornó True indicando que la descomposicion parece ser correcta  \n","cholesting(100) \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WyiC3Vwh27lw","executionInfo":{"status":"ok","timestamp":1654277878662,"user_tz":180,"elapsed":46905,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"cce80fca-1533-4337-d6fd-f5d5dc3d475e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["def solverDiagonal(d,b):\n","  n = np.shape(d)[0]\n","  res = np.zeros(n)\n","  for i in range(n):\n","    res[i] = (b[i]/d[i])\n","  return res\n","def unTestDiagonal():\n","  Dii = np.random.rand(100)\n","  D = np.diag(Dii)\n","  b = np.random.rand(100)\n","  xObtenido = solverDiagonal(Dii,b)\n","  xLinalg = np.linalg.solve(D,b)\n","  return np.all(np.isclose(xObtenido ,xLinalg))\n","def testingDiagonal(n):\n","  flag = 0\n","  for i in range (n):\n","    if unTestDiagonal():\n","      flag += 1\n","  return flag == n\n","# Testiamos Hasta 100 matrices de 100X100 retornó True \n","#por lo que el X calculado por nuestro Solver y el de linalg son cercanos\n","testingDiagonal(100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TUkUfDdn-L8a","executionInfo":{"status":"ok","timestamp":1654277878663,"user_tz":180,"elapsed":11,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"46ef99b1-33f1-40de-af3f-f4f0947fe2fd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["#Ejercicio 7\n","\n","#DEM:Sea x!=0, xt*At=(A*x)t (propiedad de matrices), luego xt*At*A*x=(A*x)t*A*x>0,\n","#pues si A*x=y, como A es inversible y x!=0 tengo que y!=0 (y (A*x)t=yt), \n","#luego yt*y=norm2(y)>0, por lo tanto At*A es definida positiva."],"metadata":{"id":"2FQDTwUs3AcA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio 8\n","def solverCholesky(m,b):\n","  aux = choleskyLDL(m)\n","  l = aux[0]\n","  D = np.diag(aux[1])\n","  lt = aux[2]\n","  z = solverTI(l,b)\n","  y = solverDiagonal(D,z)\n","  return solverTS(lt,y)\n","\n","def errorRelativoCholesky():\n","\n","  matrixSize = 10 \n","  A  = np.random.rand(matrixSize, matrixSize)\n","  at = np.transpose(A)\n","  m  = at.dot(A)\n","  b = np.random.rand(matrixSize)\n","  xObtenido = solverCholesky(m,b)\n","  e = m.dot(xObtenido) - b\n","  return np.linalg.norm(e, 1)\n","# esto es extra \n","def promedioErrorCholesky():\n","  res = np.zeros(5000)\n","  for i in range(5000):\n","    res[i] = errorRelativoCholesky()\n","  \n","  return statistics.mean(res)\n","print(promedioErrorCholesky())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"llADWG9ZCgiY","executionInfo":{"status":"ok","timestamp":1654277881698,"user_tz":180,"elapsed":3040,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"4aa4e7ea-36eb-4c5b-88a8-fba69878d972"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7.383336032396049e-10\n"]}]},{"cell_type":"code","source":["#Ejercicio 9\n","# Se hizo para 3X3 para que pueda ser vizualizada \n","def generarQ(n):\n","  matrixSize = n \n","  A  = np.random.rand(matrixSize, matrixSize)\n","  at = np.transpose(A)\n","  return at.dot(A)\n","Q = generarQ(3)\n","cholesky = choleskyLDL(Q)\n","LU = descomposicionLU(Q)\n","print(\"Cholesky para Q\")\n","print(\"L\")\n","print(cholesky[0])\n","print(\"\")\n","print(\"D\")\n","print(cholesky[1])\n","print(\"LU para Q\")\n","print(\"L\")\n","print(LU[0])\n","print(\"\")\n","print(\"U\")\n","print(LU[1])\n","\n","print(\"Se observa que la matriz L de ambas descomposiciones es igual el resultado siguiente se obtiente al evaluar las L chol,LU en isClose\", np.all(np.isclose(cholesky[0] ,LU[0])))\n","\n","print(\"Se observa que D y U no tienen relacion aparente el resultado siguiente se obtiente al evaluar D,U en isClose\",np.all(np.isclose(cholesky[1] ,LU[1])))\n","\n","print(\"Se observa que la matriz DLT y U de ambas descomposiciones es igual el resultado siguiente se obtiente al evaluarlas en isClose\",np.all(np.isclose(cholesky[1]@cholesky[2] ,LU[1])))\n","\n","\n","\n"],"metadata":{"id":"oe9-zHOPFP7n","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1654277881699,"user_tz":180,"elapsed":37,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"f8fc84c4-8108-4d56-8b76-dbd58b505d7f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cholesky para Q\n","L\n","[[1.         0.         0.        ]\n"," [0.39477711 1.         0.        ]\n"," [0.3684797  0.13908288 1.        ]]\n","\n","D\n","[[1.13862209 0.         0.        ]\n"," [0.         0.65515694 0.        ]\n"," [0.         0.         0.16387098]]\n","LU para Q\n","L\n","[[1.         0.         0.        ]\n"," [0.39477711 1.         0.        ]\n"," [0.3684797  0.13908288 1.        ]]\n","\n","U\n","[[1.13862209 0.44950194 0.41955913]\n"," [0.         0.65515694 0.09112111]\n"," [0.         0.         0.16387098]]\n","Se observa que la matriz L de ambas descomposiciones es igual el resultado siguiente se obtiente al evaluar las L chol,LU en isClose True\n","Se observa que D y U no tienen relacion aparente el resultado siguiente se obtiente al evaluar D,U en isClose False\n","Se observa que la matriz DLT y U de ambas descomposiciones es igual el resultado siguiente se obtiente al evaluarlas en isClose True\n"]}]},{"cell_type":"code","source":["#Ejercicio 10 \n","def columna(m,k):\n","  return m[:, k]\n","def cambiarColumnasQ(Q):\n","  W=np.zeros((10,10))\n","  for i in range(5):\n","    c1=columna(Q,i)\n","    c2=columna(Q,i+5)\n","    W[:, i+5]=c1\n","    W[:, i]=c2\n","  return W\n","\n","#---------------------------------#\n","Q = generarQ(10)\n","W = cambiarColumnasQ(Q)\n","b = np.random.rand(10)\n","# Descomponemos y calculamos error\n","\n","#---- para W ----#\n","xObtenido = solverSistemaPorLU(W,b)\n","e = W.dot(xObtenido) - b\n","e = np.linalg.norm(e, 1)\n","print(f\"el error obtenido por LU para W fue {e}\")\n","\n","#---- para Q ----#\n","xObtenido = solverSistemaPorLU(Q,b)\n","e = Q.dot(xObtenido) - b\n","e = np.linalg.norm(e, 1)\n","print(f\"el error obtenido por LU para Q fue {e}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eIUwOB70XcjX","executionInfo":{"status":"ok","timestamp":1654277881700,"user_tz":180,"elapsed":24,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"2b883fdf-dbe2-4ac3-b49f-efb03652f875"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["el error obtenido por LU para W fue 2.843281166065026e-13\n","el error obtenido por LU para Q fue 1.8196555373606316e-13\n"]}]},{"cell_type":"code","source":["#Ejercicio 11\n","\n","Q = generarQ(10)\n","W = cambiarColumnasQ(Q)\n","\n","print(\"La condicion de W perteneciente a R10x10 es \", np.linalg.cond(W,1))\n","print(\"La condicion de Q perteneciente a R10x10 es \", np.linalg.cond(Q,1))\n","\n","# definimos esta funcion para testear con matrices de tamaño 100X100\n","def wMasGrande(Q):\n","  W=np.zeros((100,100))\n","  for i in range(50):\n","    c1=columna(Q,i)\n","    c2=columna(Q,i+50)\n","    W[:, i+50]=c1\n","    W[:, i]=c2\n","  return W\n","\n","\n","#ahora calculemos promedios\n","def cienTests():\n","  resQ = np.zeros(100)\n","  resW = np.zeros(100)\n","  for i in range(100):\n","    Q = generarQ(100)\n","    W = wMasGrande(Q)\n","    b = np.random.rand(100)\n","    xObtenidoQ = solverSistemaPorLU(Q,b)\n","    eQ = Q.dot(xObtenidoQ) - b\n","    eQ = np.linalg.norm(eQ, 1)\n","    xObtenidoW = solverSistemaPorLU(W,b)\n","    eW = W.dot(xObtenidoW) - b\n","    eW = np.linalg.norm(eW, 1)\n","    \n","    resQ[i] = eQ\n","    resW[i] = eW\n","  meanQ    = statistics.mean(resQ)\n","  meanW    = statistics.mean(resW) \n","  \n","  return f\"el promedio obtenido para Q  {meanQ} y el promedio obtenido para W {meanW}\"  \n","\n","cienTests()\n","#Conclusiones \n","# W es obtenida luego de permutar las columnas de Q \n","# Esto nos dice que sus normas1 son iguales puesto \n","# que la suma del modulo de las columnas no se ve modificada\n","# por lo que su condicion 1 tambien deberia ser similar"],"metadata":{"id":"hyjB4IJGNJAm","colab":{"base_uri":"https://localhost:8080/","height":70},"executionInfo":{"status":"ok","timestamp":1654277890542,"user_tz":180,"elapsed":8855,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"outputId":"ebd6bcfc-4aae-4a16-94c5-896d63f98b78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["La condicion de W perteneciente a R10x10 es  10002.457188271403\n","La condicion de Q perteneciente a R10x10 es  10002.457188270617\n"]},{"output_type":"execute_result","data":{"text/plain":["'el promedio obtenido para Q  9.865496254934936e-07 y el promedio obtenido para W 9.526666672295958e-06'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["#ejercicio 12\n","\n","def error (m,x,b):\n","  e = m.dot(x) - b\n","  return np.linalg.norm(e, 1)\n","\n","  \n","def experimentoFinal():\n","  sumaQ = 0\n","  sumaW = 0\n","  for i in range (100):\n","    Q = generarQ(100)             # consignas 1 y 2 \n","    b = np.random.rand(100)\n","    Xchol = solverCholesky(Q,b)     # consigna 3\n","    eChol = error(Q,Xchol,b)      # consigna 4\n","    #---------------------#\n","    W = wMasGrande(Q)             # consigna 5\n","    Xlu = solverSistemaPorLU(W,b) # consigna 6\n","    eLu = error(W,Xlu,b)          #consigna  7\n","\n","    sumaQ += eChol\n","    sumaW += eLu\n","  sumaQ = sumaQ/100\n","  sumaW = sumaW/100\n","  return sumaQ,sumaW\n","\n","def mensajeFinal():\n","  aux = experimentoFinal()\n","  q = aux[0]\n","  w = aux[1]\n","  return f\"el promedio final de error fue {q} para la matriz Q y {w} para la matriz W\"\n","\n","mensajeFinal()"],"metadata":{"id":"5tKMEJzdcF8a","executionInfo":{"status":"ok","timestamp":1654277941054,"user_tz":180,"elapsed":50525,"user":{"displayName":"Ezequiel Ponce","userId":"04770079672918923797"}},"colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"574a3859-f08f-4e6c-82d7-88c6b08ab457"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'el promedio final de error fue 7.1186039962700675e-09 para la matriz Q y 1.484195629208873e-07 para la matriz W'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":70}]}]}